#!/bin/bash

# Warna untuk output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Variabel
CONTAINER_NAME="ubuntu20"
IMAGE_NAME="ubuntu20-image"
PORTS=(
    "80:80"
    "443:443"
    "149:22"  # Changed SSH port to 149
    "445:445"
    "1701:1701"
    "1723:1723"
    "8880:8880"
    "8443:8443"
)

# Fungsi untuk memeriksa root
check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        echo -e "${RED}Script harus dijalankan sebagai root!${NC}"
        exit 1
    fi
}

# Fungsi untuk install Docker
install_docker() {
    if ! command -v docker &> /dev/null; then
        echo -e "${YELLOW}Menginstall Docker...${NC}"
        apt update > /dev/null 2>&1
        apt install -y apt-transport-https ca-certificates curl software-properties-common > /dev/null 2>&1
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - > /dev/null 2>&1
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /dev/null 2>&1
        apt update > /dev/null 2>&1
        apt install -y docker-ce > /dev/null 2>&1
        systemctl enable --now docker > /dev/null 2>&1
        echo -e "${GREEN}Docker berhasil diinstall!${NC}"
    else
        echo -e "${GREEN}Docker sudah terinstall.${NC}"
    fi
}

# Fungsi untuk membersihkan container yang ada
cleanup_containers() {
    echo -e "${YELLOW}Membersihkan container yang ada...${NC}"
    if docker ps -a | grep -q $CONTAINER_NAME; then
        docker stop $CONTAINER_NAME > /dev/null 2>&1
        docker rm $CONTAINER_NAME > /dev/null 2>&1
        echo -e "${GREEN}Container lama berhasil dihapus.${NC}"
    fi
}

# Fungsi untuk build image
build_image() {
    echo -e "${YELLOW}Membuat Dockerfile...${NC}"
    cat > Dockerfile <<EOF
FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive

# Install package dasar terlebih dahulu
RUN apt-get update && \\
    apt-get install -y --no-install-recommends \\
    software-properties-common \\
    apt-transport-https \\
    ca-certificates \\
    curl \\
    wget \\
    gnupg2 && \\
    apt-get clean && \\
    rm -rf /var/lib/apt/lists/*

# Install package utama
RUN apt-get update && \\
    apt-get install -y \\
    net-tools \\
    openssh-server \\
    iproute2 \\
    iptables \\
    haproxy \\
    dropbear \\
    sstp-server \\
    strongswan \\
    pptpd && \\
    apt-get clean && \\
    rm -rf /var/lib/apt/lists/*

# Konfigurasi SSH
RUN sed -i 's/#Port 22/Port 22/g' /etc/ssh/sshd_config && \\
    mkdir -p /var/run/sshd && \\
    echo 'root:password' | chpasswd && \\
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# Expose ports
EXPOSE 22 80 443 445 1701 1723 8880 8443

CMD ["/usr/sbin/sshd", "-D"]
EOF

    echo -e "${YELLOW}Membangun image Docker...${NC}"
    if ! docker build -t $IMAGE_NAME .; then
        echo -e "${RED}Gagal membangun image Docker!${NC}"
        exit 1
    fi
    echo -e "${GREEN}Image Docker berhasil dibangun!${NC}"
}

# Fungsi untuk menjalankan container
run_container() {
    cleanup_containers
    
    echo -e "${YELLOW}Menjalankan container...${NC}"
    
    # Build perintah docker run dengan semua port mapping
    DOCKER_RUN_CMD="docker run -d --name $CONTAINER_NAME --restart unless-stopped"
    
    for PORT in "${PORTS[@]}"; do
        DOCKER_RUN_CMD+=" -
